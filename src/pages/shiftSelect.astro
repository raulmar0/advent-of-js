---
import DaysLayout from "../layouts/DaysLayout.astro";
---

<style></style>
<DaysLayout>
  <div class="wrapper">
    <div class="cover">
      <img
        src="/advent-of-js/shift-assets/images/podcast-cover.png"
        alt="Compressed.fm"
      />
    </div>
    <div class="content">
      <h1>Listen to all the Compressed.fm Episodes</h1>

      <ul id="episode-list"></ul>

      <button>Mark as Played</button>
    </div>
  </div>
  <script>
    const episodes = [
      {
        id: 1,
        name: "James Q Quick's Origin Story",
      },
      {
        id: 2,
        name: "Amy Dutton's Origin Story",
      },
      {
        id: 3,
        name: "The Tech Behind Compressed.fm",
      },
      {
        id: 4,
        name: "Starting a New Development Project",
      },
      {
        id: 5,
        name: "How Do you Start a New Design Project?",
      },
      {
        id: 6,
        name: "Freelancing (Part 1)",
      },
      {
        id: 7,
        name: "Freelancing (Part 2)",
      },
      {
        id: 8,
        name: "The Tech Behind jamesqquick.com",
      },
      {
        id: 9,
        name: "Teh Tech Behind SelfTeach.me",
      },
      {
        id: 10,
        name: "Design Fundamentals (Part 1)",
      },
      {
        id: 11,
        name: "Design Fundamentals (Part 2)",
      },
      {
        id: 12,
        name: "Productivity: Tools, Tips, and Workflows",
      },
      {
        id: 13,
        name: "The Future of Code with No Code",
      },
      {
        id: 14,
        name: "Building the Perfect Desk Setup",
      },
      {
        id: 15,
        name: "Everything You Need to Know to Get Started in SvelteKit",
      },
      {
        id: 16,
        name: "Live Streaming for Beginners",
      },
      {
        id: 17,
        name: "All Things Automated",
      },
      {
        id: 18,
        name: "Amy Gives James a Design Consult",
      },
      {
        id: 19,
        name: "Figma for Everyone",
      },
      {
        id: 20,
        name: "Learning and Building in Public",
      },
      {
        id: 21,
        name: "Getting Your First Dev Job",
      },
      {
        id: 22,
        name: "Hiring a Designer or Getting Your First UI / UX Job",
      },
      {
        id: 23,
        name: "IRL Freelance Proposal",
      },
      {
        id: 24,
        name: "Getting Started on YouTube",
      },
      {
        id: 25,
        name: "Starting your own Podcast",
      },
      {
        id: 26,
        name: "How Blogging Can Change Your Career",
      },
      {
        id: 27,
        name: "Talking to Some of Our Favorite Content Creators",
      },
      {
        id: 28,
        name: "Our Favorite Things: A Crossover Episode with Web Dev Weekly",
      },
      {
        id: 29,
        name: "Freelancing IRL: Unveiling a Site Redesign",
      },
      {
        id: 30,
        name: "Wordpress in 2021",
      },
      {
        id: 31,
        name: "Struggle Bus",
      },
      {
        id: 32,
        name: "Getting Started with TypeScript",
      },
      {
        id: 33,
        name: "Small Design Tweaks that Make All the Difference",
      },
      {
        id: 34,
        name: "Getting git",
      },
      {
        id: 35,
        name: "Crossover Episode with Purrfect Dev",
      },
      {
        id: 36,
        name: "SVGs FTW",
      },
      {
        id: 37,
        name: "Building a Course",
      },
    ];

    const styles = `
    @import url("https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@400;700&display=swap");

    body {
      background: #f3f3f3;
      color: #4e4e4e;
      min-width: 100vw;
      min-height: 100vh;
      display: flex;
      align-items: center;
      font-family: "Nunito Sans", sans-serif;
      justify-content: center;
    }

    .wrapper {
      display: flex;
      align-items: center;
    }

    .cover {
      filter: drop-shadow(0px 4px 24px #453f3f);
    }

    .content {
      background: white;
      border-top-right-radius: 32px;
      border-bottom-right-radius: 32px;
      padding: 60px 80px;
      height: 450px;
      overflow-y: scroll;
    }

    h1 {
      font-weight: bold;
      font-size: 0.75rem;
      letter-spacing: 2px;
      text-transform: uppercase;
      color: #a7a7a7;
      margin: 0 0 40px 0;
      padding: 0;
    }

    input[type="checkbox"] {
      display: none;
    }

    ul {
      list-style-type: none;
      margin: 0;
      padding: 0;
    }

    li {
      margin-bottom: 24px;
      font-size: 1rem;
    }

    label {
      cursor: pointer;
    }

    input[type="checkbox"] + span {
      background: url("/advent-of-js/shift-assets/images/checkbox--unchecked.svg")
        left top no-repeat;
      background-size: 20px 20px;
      min-height: 20px;
      padding-left: 30px;
    }

    input[type="checkbox"]:checked + span {
      background-image: url("/advent-of-js/shift-assets/images/checkbox--checked.svg");
      text-decoration: line-through;
      color: #c9cdd1;
    }

    button {
      background: #8c59ff;
      border: none;
      border-radius: 24px;
      text-transform: uppercase;
      font-family: "Nunito Sans", sans-serif;
      font-weight: bold;
      padding: 8px 25px;
      color: white;
      line-height: 1;
      letter-spacing: 2px;
      cursor: pointer;
    }

    button:hover {
      background: #543599;
    }
    `;

    const styleSheet = document.createElement("style");
    styleSheet.type = "text/css";
    styleSheet.innerText = styles;
    document.head.appendChild(styleSheet);

    const EpisodeComponent = (episode) => {
      return `
      <li>
        <label for="episode-${episode.id}">
          <input type="checkbox" name="episode-${episode.id}" id="episode-${episode.id}" />
          <span>${episode.id} || ${episode.name}</span>
        </label>
      </li>
      `;
    };

    const renderList = (episodes) => {
      return `
          ${episodes.map(EpisodeComponent).join("")}
          `;
    };

    document.querySelector("#episode-list").innerHTML = renderList(episodes);

    let isShiftPressed = false;
    document.addEventListener("keydown", (e) => {
      isShiftPressed = e.key === "Shift";
      console.log({ isShiftPressed });
    });

    document.addEventListener("keyup", (e) => {
      isShiftPressed = !(e.key === "Shift");
    });

    const checkboxes = document.querySelectorAll('input[type="checkbox"]');

    let lastChecked = null;
    checkboxes.forEach((checkbox) =>
      checkbox.addEventListener("click", handleCheck)
    );
    function handleCheck(e) {
      const targetCheckboxHTMLId = e.target.id;
      const regex = /-(\d+)/;
      const targetCheckboxId = parseInt(targetCheckboxHTMLId.match(regex)[1]);

      if (lastChecked === null) {
        lastChecked = e.target;
        return;
      }

      const lastCheckedId = parseInt(lastChecked.id.match(regex)[1]);

      if (isShiftPressed) {
        if (lastCheckedId < targetCheckboxId) {
          checkboxes.forEach((checkbox) => {
            const currentCheckboxId = parseInt(checkbox.id.match(regex)[1]);
            if (
              currentCheckboxId >= lastCheckedId &&
              currentCheckboxId <= targetCheckboxId
            ) {
              checkbox.checked = true;
            }
          });
        }
        if (lastCheckedId > targetCheckboxId) {
          checkboxes.forEach((checkbox) => {
            const currentCheckboxId = parseInt(checkbox.id.match(regex)[1]);
            if (
              currentCheckboxId <= lastCheckedId &&
              currentCheckboxId >= targetCheckboxId
            ) {
              console.log({
                currentCheckboxId,
                lastCheckedId,
                targetCheckboxId,
              });
              console.log(currentCheckboxId <= lastCheckedId);
              checkbox.checked = true;
            }
          });
        }
      }
      lastChecked = e.target;
    }
  </script>
</DaysLayout>
